trigger:
  branches:
    include:
      - main
  paths:
    include:
      - '/Pipelines/**'
resources:
  - repo: self

variables:
  - group: github-and-azure-access-tokens
  - name: vmImageName
    value: 'ubuntu-latest'

stages:
  - stage: Build
    displayName: Build
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              echo "Hi there!"

  - stage: DeployAllPipelines
    displayName: Deploy all Pipelines
    dependsOn: Build
    
    jobs:
      - job: TerraformDeploy
        displayName: Terraform Deploy
        pool:
          vmImage: $(vmImageName)
        steps:
          - script: |
              cd Pipelines/PipelinesStack
              echo '{
                "CdkTfBackendAzureResourceGroupName": "$CdkTfBackendAzureResourceGroupName",
                "CdkTfBackendAzureStorageAccountName": "$CdkTfBackendAzureStorageAccountName",
                "CdkTfBackendAzureStorageContainerName": "$CdkTfBackendAzureStorageContainerName",
                "AzureDevopsOrganizationUrl": "$AzureDevopsOrganizationUrl",
                "AzureDevopsPersonalAccessToken": "$AzureDevopsPersonalAccessToken",
                "GithubPersonalAccessToken": "$GithubPersonalAccessToken"
              }' > appsettings.json
            displayName: 'Populate appsettings.json'
          - task: AzureCLI@2
            displayName: 'Azure CLI - Terraform Deploy'
            inputs:
              azureSubscription: 'CICD-subscription-service-connection'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                cd Pipelines/PipelinesStack
                dotnet build
                npm ci
                npm run deploy -- --auto-approve
